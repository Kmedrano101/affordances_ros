<?xml version="1.0" encoding="utf-8"?>

<launch>
  <!-- Console launch prefix -->
  <arg name="launch_prefix" default=""/>
  <arg name="image" default="/usb_cam/image_raw"/>

  <!-- Config and weights folder. -->
  <arg name="yolo_weights_path"          default="$(find darknet_ros)/yolo_network_config/weights"/>
  <arg name="yolo_config_path"           default="$(find darknet_ros)/yolo_network_config/cfg"/>
  <arg name="affordances_param_file"     default="$(find affordances)/config/affordances.yaml"/>

  <!-- ROS and network parameter files -->
  <arg name="ros_param_file"             default="$(find darknet_ros)/config/ros.yaml"/>
  <arg name="network_param_file"         default="$(find darknet_ros)/config/yolov2-tiny.yaml"/>

  <!-- Load parameters -->
  <rosparam command="load" ns="darknet_ros"     file="$(arg ros_param_file)"/>
  <rosparam command="load" ns="darknet_ros"     file="$(arg network_param_file)"/>
  <rosparam command="load" ns="affordances" file="$(arg affordances_param_file)"/>

  <!-- Start usb_cam nodes
  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device"    value="/dev/video0" />
    <param name="image_width"     value="640" />
    <param name="image_height"    value="480" />
    <param name="pixel_format"    value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method"       value="mmap"/>
  </node>--> 

  <!-- Start darknet and ros wrapper -->
  <node pkg="darknet_ros" type="darknet_ros" name="darknet_ros" output="screen" launch-prefix="$(arg launch_prefix)">
    <param name="weights_path"          value="$(arg yolo_weights_path)" />
    <param name="config_path"           value="$(arg yolo_config_path)" />
    <remap from="/camera/rgb/image_raw"  to="$(arg image)" />
  </node>
  <!-- Start affordances nodes -->
  <node pkg="affordances" ns="affordances" type="person_object.py" name="person_object" output="screen" launch-prefix="gnome-terminal --command"></node>
  <node pkg="affordances" ns="affordances" type="object_pos.py" name="object_pos" output="screen" launch-prefix="gnome-terminal --command"></node>
  <node pkg="affordances" ns="affordances" type="person_pose.py" name="person_pose" output="screen" launch-prefix="gnome-terminal --command"></node>
  <node pkg="affordances" ns="affordances" type="agent.py" name="agent" output="screen" launch-prefix="gnome-terminal --command"></node>
</launch>